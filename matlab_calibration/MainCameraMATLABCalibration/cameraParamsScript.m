% Auto-generated by cameraCalibrator app on 13-May-2019
%-------------------------------------------------------


% Define images to process
imageFileNames = {
    'mono0008.png',...
    'mono0009.png',...
    'mono0010.png',...
    'mono0011.png',...
    'mono0015.png',...
    'mono0021.png',...
    'mono0022.png',...
    'mono0023.png',...
    'mono0024.png',...
    'mono0026.png',...
    'mono0028.png',...
    'mono0029.png',...
    'mono0034.png',...
    'mono0037.png',...
    'mono0038.png',...
    'mono0039.png',...
    'mono0040.png',...
    'mono0041.png',...
    'mono0042.png',...
    'mono0044.png',...
    'mono0045.png',...
    'mono0047.png',...
    'mono0049.png',...
    'mono0052.png',...
    'mono0053.png',...
    'mono0059.png',...
    'mono0060.png',...
    'mono0061.png',...
    'mono0062.png',...
    'mono0063.png',...
    'mono0067.png',...
    'mono0068.png',...
    'mono0069.png',...
    'mono0071.png',...
    'mono0075.png',...
    'mono0080.png',...
    'mono0083.png',...
    'mono0084.png',...
    'mono0085.png',...
    'mono0086.png',...
    'mono0087.png',...
    'mono0088.png',...
    'mono0089.png',...
    'mono0090.png',...
    'mono0091.png',...
    'mono0092.png',...
    'mono0093.png',...
    'mono0094.png',...
    'mono0097.png',...
    'mono0098.png',...
    'mono0099.png',...
    'mono0100.png',...
    'mono0101.png',...
    'mono0102.png',...
    'mono0103.png',...
    'mono0104.png',...
    'mono0105.png',...
    'mono0106.png',...
    'mono0107.png',...
    'mono0108.png',...
    'mono0119.png',...
    'mono0122.png',...
    'mono0123.png',...
    'mono0126.png',...
    'mono0127.png',...
    'mono0129.png',...
    'mono0131.png',...
    };
% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 120;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
